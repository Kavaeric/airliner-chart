/* AirlinerChart.module.css */

.chartControls {
	display: flex;
	flex-direction: row;
	justify-content: flex-end;
	align-items: center;
	border-bottom: var(--border-weight-100) solid var(--border-minor);
}

.chartControls .btn-group {
	display: flex;
	flex-direction: row;
	border-left: var(--border-weight-100) solid var(--border-minor);
	border-right: var(--border-weight-100) solid var(--border-minor);
}

/* ChartContainer Component
 * 
 * A container for the chart, which handles the layout of the chart and its components.
 * 3x3 grid layout for chart components:
 * ┌─────────────┬─────────────┬─────────────┐
 * │ Y Brush     │ Y Axis      │ Chart Area  │
 * ├─────────────┼─────────────┼─────────────┤
 * │ empty       │ empty       │ X Axis      │
 * ├─────────────┼─────────────┼─────────────┤
 * │ empty       │ empty       │ X Brush     │
 * └─────────────┴─────────────┴─────────────┘
 */
.chartContainer {
	display: grid;
	position: relative;
	grid-template-areas:
		"yBrush yAxis chartArea"
		"empty1 empty2 xAxis"
		"empty3 empty4 xBrush";

	/* Explicit minmax values are needed to ensure the SVG chart can shrink
	   because SVG sure is weird like that */
	grid-template-rows:
		minmax(0, auto)
		minmax(0, var(--space-800))
		minmax(0, var(--space-600));
	grid-template-columns:
		minmax(0, var(--space-600))
		minmax(0, var(--space-800))
		minmax(0, auto);
	
	width: 100%;
	height: 100%;
	min-height: 0; /* Allows flex child to shrink */
	border-bottom: var(--border-weight-100) solid var(--border-minor);
}

.empty1,
.empty2,
.empty3,
.empty4,
.yAxis,
.xAxis,
.yAxisBrush,
.xAxisBrush {
	color-scheme: dark;
}

.empty1 {
	grid-area: empty1 ;
}

.empty2 {
	grid-area: empty2;
}

.empty3 {
	grid-area: empty3;
}

.empty4 {
	grid-area: empty4;
}

.chartArea {
	position: relative; /* For proper layering */
	z-index: 1; /* Ensure chart appears above axis labels */
	grid-area: chartArea;
	width: 100%;
	height: 100%;
	min-height: 0; /* Critical: allows grid item to shrink */
	overflow: hidden; /* Prevent content from expanding beyond bounds */
	color-scheme: light;
	background-color: var(--surface-minor);
}

/* Y-axis grid area */
.yAxis {
	grid-area: yAxis;
	border-bottom: var(--border-weight-100) solid var(--border-minor);
}

/* X-axis grid area */
.xAxis {
	grid-area: xAxis;
	border-left: var(--border-weight-100) solid var(--border-minor);
}

/* Chart Axes Styling (inlined from ChartAxes.module.css) */

/* Base axis styling */
.xAxis, .yAxis {
	/* Nothing yet */
}

.axisLine {
	stroke-width: 0;
}

.axisLabelX,
.axisLabelY {
	fill: var(--text-minor);
	font-family: var(--font-family-display);
	font-size: var(--text-size-400);
	font-weight: var(--font-weight-regular);
	letter-spacing: var(--text-tracking-800);
	text-transform: uppercase;
}

.axisLabelX {
	dominant-baseline: baseline;
	transform: translateY(var(--space-negative-200));
}

.axisLabelY {
	dominant-baseline: hanging;
	writing-mode: sideways-lr;
	transform: translateX(var(--space-100));
}

.xAxis .tick line,
.yAxis .tick line {
	stroke-width: 0;
}

/* Axes tick labels */
.xAxis .tick text,
.yAxis .tick text {
	fill: var(--text-minor);
	font-family: var(--font-family-display);
	font-weight: var(--font-weight-regular);
	font-size: var(--text-size-300);
	letter-spacing: var(--text-tracking-400);
}

.xAxis .tick text {
	text-anchor: middle;
}

.yAxis .tick text {
	text-anchor: end;
}


.xAxisBrush {
	grid-area: xBrush;
	border-left: var(--border-weight-100) solid var(--border-minor);
}

.yAxisBrush {
	grid-area: yBrush;
	border-bottom: var(--border-weight-100) solid var(--border-minor);
}

.xAxisBrush .airlinerBrushControl {
	cursor: ew-resize;
}

.yAxisBrush .airlinerBrushControl {
	cursor: ns-resize;
}

/* AirlinerScatterBrush Component Styling */
/* Background styling for brush areas */
.airlinerBrushBackground {
	transition: fill 0.1s linear;
	fill: transparent;
	opacity: 1;
}

/* Limit line styling for passenger capacity limits */
.airlinerBrushLimitLine {
	stroke: var(--text-minor);
	stroke-width: 1;
	opacity: 1;
}

/* Passenger class range styling */
.airlinerBrushPaxClassRange {
	fill: var(--text-minor);
	opacity: 1;
}

.airlinerBrushRangeKM {
	stroke: var(--text-minor);
	stroke-width: 1;
	opacity: 1;
}


/* ===== Airliner Brush Control Area Styling ===== */

/* --- Brush Backgrounds --- */
.xAxisBrush:hover .airlinerBrushBackground,
.yAxisBrush:hover .airlinerBrushBackground {
	fill: var(--highlight-hover-diminished);
}

.airlinerBrushControl .airlinerBrushBackground {
	fill: var(--surface-minor) !important;
}
.airlinerBrushControl:hover .airlinerBrushBackground {
	fill: var(--interactive-major) !important;
}

/* --- Brush Borders --- */
.xAxisBrush .brushBorder,
.yAxisBrush .brushBorder {
	fill: var(--border-minor);
}
.xAxisBrush .brushBorder {
	transition: height 0.1s linear, opacity 0.1s linear;
	height: var(--border-weight-100);
}
.yAxisBrush .brushBorder {
	transition: width 0.1s linear, transform 0.1s linear, opacity 0.1s linear;
	transform: translateX(var(--space-negative-025)); /* SVG positioning works in mysterious ways */
	width: var(--border-weight-100);
}
.xAxisBrush:hover .brushBorder {
	height: var(--space-100);
}
.yAxisBrush:hover .brushBorder {
	width: var(--space-100);
	transform: translateX(var(--space-negative-100));
}
.airlinerBrushControl .brushBorder {
	fill: var(--interactive-augmented);
	opacity: var(--opacity-100);
}
.airlinerBrushControl:hover .brushBorder {
	fill: var(--interactive-augmented-active);
	opacity: var(--opacity-100);
}

/* --- Limit Lines --- */
.airlinerBrushControl .airlinerBrushLimitLine {
	stroke: var(--interactive-augmented);
	stroke-width: var(--border-weight-100);
	opacity: var(--opacity-100);
}

/* --- Passenger Class Range --- */
.airlinerBrushControl .airlinerBrushPaxClassRange {
	fill: var(--interactive-augmented);
	opacity: var(--opacity-50);
}
.airlinerBrushControl:hover .airlinerBrushPaxClassRange {
	fill: var(--interactive-augmented-active);
}

/* --- Range KM Line --- */
.airlinerBrushControl .airlinerBrushRangeKM {
	stroke: var(--interactive-augmented);
	stroke-width: var(--border-weight-100);
	opacity: var(--opacity-100);
}
.airlinerBrushControl:hover .airlinerBrushRangeKM {
	stroke: var(--interactive-augmented-active);
}